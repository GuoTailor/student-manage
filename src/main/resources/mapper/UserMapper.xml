<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.manage.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.student.manage.domain.User">
        <!--@mbg.generated-->
        <!--@Table `user`-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="enable" jdbcType="BOOLEAN" property="enable"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>
    <resultMap id="UseWithRole" type="com.student.manage.dto.resp.UserInfo" extends="BaseResultMap">
        <collection
                property="roles"
                ofType="com.student.manage.domain.Role"
                select="com.student.manage.mapper.RoleMapper.getRolesByUserId"
                column="id">
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        username,
        `password`,
        `enable`,
        create_time,
        tel,
        email,
        creator,
        `name`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from `user`
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from `user`
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.student.manage.domain.User" useGeneratedKeys="true" keyProperty="id">
        <!--@mbg.generated-->
        insert into `user` (id, username, `password`,
                            `enable`, create_time, tel,
                            email, creator, `name`)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{enable,jdbcType=BOOLEAN}, #{createTime,jdbcType=TIMESTAMP}, #{tel,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.student.manage.domain.User" useGeneratedKeys="true" keyProperty="id">
        <!--@mbg.generated-->
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="name != null">
                `name`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                #{enable,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.student.manage.domain.User">
        <!--@mbg.generated-->
        update `user`
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                `enable` = #{enable,jdbcType=BOOLEAN},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.student.manage.domain.User">
        <!--@mbg.generated-->
        update `user`
        set username    = #{username,jdbcType=VARCHAR},
            `password`  = #{password,jdbcType=VARCHAR},
            `enable`    = #{enable,jdbcType=BOOLEAN},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            tel         = #{tel,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            creator     = #{creator,jdbcType=VARCHAR},
            `name`      = #{name,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="findUserByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where username = #{username}
    </select>
    <select id="findRolesByUserId" resultType="com.student.manage.domain.Role">
        select role.*
        from role
                 left join user_role ur on role.id = ur.role_id
        where user_id = #{userId}
    </select>
    <insert id="insertUserRole">
        insert into user_role (user_id, role_id)
        values (#{userId}, #{roleId})
    </insert>

    <select id="findAll" resultMap="UseWithRole">
        select id,
               username,
               `enable`,
               create_time,
               tel,
               email,
               creator,
               `name`
        from `user`
    </select>

    <select id="findByPage" resultMap="UseWithRole">
        select id,
               username,
               `enable`,
               create_time,
               tel,
               email,
               creator,
               `name`
        from `user`
        <where>
            <if test="username != null and username != ''">
                username = #{username}
            </if>
            <if test="tel != null and tel != ''">
                and tel = #{tel}
            </if>
        </where>
        order by create_time desc
    </select>

    <delete id="deleteAllRole">
        delete
        from user_role
        where user_id = #{userId}
    </delete>

    <select id="findAllId" resultType="java.lang.Integer">
        select id
        from `user`
    </select>
</mapper>
